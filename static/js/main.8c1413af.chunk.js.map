{"version":3,"sources":["components/Formulario.js","components/Cancion.js","components/Info.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","guardarBusquedaLetra","useState","artista","cancino","busqueda","guardarBusqueda","error","guardarError","cancion","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","type","placeholder","onChange","Cancion","letra","length","Info","info","Object","keys","strArtistThumb","strGenre","strBiographyES","src","alt","href","strFacebook","rel","strTwitter","strLastFMChart","App","busquedaletra","guardarLetra","guardarInfo","useEffect","a","url","url2","Promise","all","axios","informacion","data","lyrics","artists","consultarApiLetra","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c1413af.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst Formulario = ({guardarBusquedaLetra}) => {\r\n\r\n    const [busqueda, guardarBusqueda] = useState({\r\n        artista: '',\r\n        cancino: ''\r\n    })\r\n    const [error, guardarError] = useState(false);\r\n    const {artista, cancion} = busqueda;\r\n    // funcion a cada input para leer su contenido\r\n    const actualizarState = e => {\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // consultar las apis\r\n    const buscarInformacion = e => {\r\n        e.preventDefault();\r\n\r\n        if(artista.trim()=== '' || cancion.trim()=== ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n        // Pasar al componente principal\r\n        guardarBusquedaLetra(busqueda);\r\n    }\r\n    return ( \r\n        <div className=\"bg-info\">\r\n            <div className=\"container\">\r\n            {error ? <p className=\"alert alert-danger text-center p-2\">Todos los campos son obligatorios</p> : null}\r\n                <div className=\"row\">\r\n                    <form\r\n                        onSubmit={buscarInformacion}\r\n                        className=\"col card text-white bg-transparent mb-5 pt-5 pb-2\"\r\n                    >\r\n                        <fieldset>\r\n                            <legend className=\"text-center\">Buscador Letras Canciones</legend>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Artista</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"artista\"\r\n                                            placeholder=\"Nombre Artista\"\r\n                                            onChange={actualizarState}\r\n                                            value={artista}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Canción</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"cancion\"\r\n                                            placeholder=\"Nombre Canción\"\r\n                                            onChange={actualizarState}\r\n                                            value={cancion}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary float-right\"\r\n                            >Buscar</button>\r\n                        </fieldset>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n \r\nexport default Formulario;","import React, { Fragment } from 'react';\r\n\r\nconst Cancion = ({letra}) => {\r\n\r\n    if(letra.length===0) return null;\r\n    return ( \r\n        <Fragment>\r\n            <h2>Letra Canción</h2>\r\n            <p className=\"letra\">{letra}</p>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Cancion;","import React from 'react';\r\n\r\nconst Info = ({info}) => {\r\n    if(Object.keys(info).length === 0) return null;\r\n\r\n    const { strArtistThumb, strGenre, strBiographyES } = info;\r\n    return ( \r\n        <div className='card border-light'>\r\n            <div className='card-header bg-primary text-light font-weight-bold'>\r\n                Informacion Artista\r\n            </div>\r\n            <div className='card-body'>\r\n                <img src={strArtistThumb} alt='Logo Artista' />\r\n                <p className='card-text'>Genero: {strGenre}</p>\r\n                <p className='card-text'>Biografia:</p>\r\n                <p className='card-text'>{strBiographyES}</p>\r\n                <p className='card-text'>\r\n                    <a href={`https://${info.strFacebook}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-facebook\"></i>\r\n                    </a>\r\n                    <a href={`https://${info.strTwitter}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                    </a>\r\n                    <a href={`${info.strLastFMChart}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-lastfm\"></i>\r\n                    </a>\r\n                </p>\r\n           </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Info;","\r\nimport React, { Fragment, useEffect, useState }  from 'react';\r\nimport Formulario from './components/Formulario';\r\n\r\nimport axios from \"axios\";\r\nimport Cancion from './components/Cancion';\r\nimport Info from './components/Info';\r\n\r\nfunction App() {\r\n\r\n  // deifnir el state\r\n  const [ busquedaletra, guardarBusquedaLetra] = useState({});\r\n  const [ letra, guardarLetra] = useState(\"\");\r\n  const [ info, guardarInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    if(Object.keys(busquedaletra).length === 0) return;\r\n\r\n    const consultarApiLetra = async () => {\r\n      const {artista, cancion} = busquedaletra\r\n      const url = `https://api.lyrics.ovh/v1/${artista}/${cancion}`;\r\n      const url2 = `https://theaudiodb.com/api/v1/json/1/search.php?s=${artista}`\r\n      \r\n      const [letra, informacion] = await Promise.all([\r\n        axios(url),\r\n        axios(url2)\r\n      ]);\r\n      guardarLetra(letra.data.lyrics);\r\n      guardarInfo(informacion.data.artists[0]);\r\n    }\r\n    consultarApiLetra();\r\n  }, [busquedaletra])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Formulario\r\n        guardarBusquedaLetra={guardarBusquedaLetra}\r\n      />\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Info\r\n              info={info}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <Cancion\r\n            letra={letra}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}